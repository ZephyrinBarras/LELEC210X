import numpy as np
import matplotlib.pyplot as plt
data = np.array([0.45, 0.78794872, 0.79948718, 0.80076923, 0.8074359, 0.81410256,
        0.83692308, 0.83794872, 0.82358974, 0.83871795, 0.84333333, 0.84564103,
        0.85076923, 0.84923077, 0.85974359, 0.84589744, 0.85410256, 0.86410256,
        0.85820513, 0.86717949, 0.86692308, 0.87076923, 0.87333333, 0.8725641,
        0.8674359, 0.86487179, 0.86897436, 0.87307692, 0.87615385, 0.87589744,
        0.87820513, 0.88102564, 0.88025641, 0.88230769, 0.88487179, 0.87179487,
        0.87923077, 0.87153846, 0.87333333, 0.88025641, 0.8825641, 0.88,
        0.88589744, 0.87717949, 0.88487179, 0.88358974, 0.88769231, 0.88589744,
        0.87974359, 0.88076923, 0.88205128, 0.88333333, 0.88641026, 0.88461538,
        0.88589744, 0.88717949, 0.88974359, 0.88794872, 0.88564103, 0.89282051,
        0.88948718, 0.89282051, 0.89102564, 0.88589744, 0.88948718, 0.88769231,
        0.88692308, 0.89128205, 0.89384615])


abs = np.arange(1,len(data)+1,1)

params = np.polyfit(np.log(abs[1:]), data[1:], 1)

a, b = params

x_log = np.linspace(min(abs), max(abs), 100)
y_log = a * np.log(x_log) + b

plt.scatter(abs, data, label='Original Data')
plt.plot(x_log, y_log, color='red', label='Logarithmic Function Approximation')
plt.xlabel('X')
plt.ylabel('Y')
plt.title('Logarithmic Function Approximation')
plt.legend()
plt.grid(True)
plt.show()
deriv = a/x_log
plt.plot(x_log,deriv)
plt.show()